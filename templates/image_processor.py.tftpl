import boto3
from io import BytesIO
from PIL import Image

s3 = boto3.client('s3')

def handler(event, context):
    source_bucket = event['Records'][0]['s3']['bucket']['name']
    source_key = event['Records'][0]['s3']['object']['key']

    # Read the file from s3
    source_object = s3.get_object(Bucket=source_bucket,Key=source_key)
    source_file = source_object['Body'].read()

    # Load the image using Pillow
    img = Image.open(BytesIO(source_file))

    # remove EXIF data
    exif_fields = list(img.info.keys())
    for k in exif_fields:
        del img.info[k]

    # Save the file with stripped EXIF data
    target_file = '/tmp/cleaned.jpg'
    target = open(target_file, "w")
    img.save(target)

    # Upload the file to the target bucket
    s3.upload_file(target_file, Bucket='${target_bucket}', Key=source_key)

    return {
        'statusCode': 200,
        'body': 'Image cleaned of EXIF data and saved to ${target_bucket}'
    }
